classdef fuzzyMatrixCompositionFixtures < matlab.unittest.fixtures.Fixture
    properties
        ExamplesMaxMin
        ExamplesMinMax
        ExamplesMaxProduct
        ExamplesMinAlpha
        ExamplesGodel
        ExamplesMaxEpsilon
        ExamplesMinDiamond
        ExamplesGoguen
        ExamplesLukasiewicz
        ExamplesMaxLukasiewicz
        ExamplesMinProbabilistic
        ExamplesMinBounded
        ExamplesMaxDelta
        ExamplesMaxGama

        RandomExamples
    end
    
    methods
        function setup(fixture)
            % MAX-MIN Examples
            fixture.ExamplesMaxMin = {
                % M. Siddique, Fuzzy Decision Making Using Max-Min Method and Minimization Of Regret Method(MMR), 2009, https://www.diva-portal.org/smash/get/diva2:830339/FULLTEXT01
                struct('a', fuzzyMatrix([0.2, 0.5, 0.7; 0.3, 0.6, 0.7; 0.4, 0.8, 0.9]), ...
                       'b', fuzzyMatrix([1.0, 0.8; 0.5, 0.6; 0.4, 0.3]), ...
                       'expected', fuzzyMatrix([0.5, 0.5; 0.5, 0.6; 0.5, 0.6]));

                % D. Todinca, Fuzzy relations, Chapter 4, https://staff.cs.upt.ro/~todinca/FLA/Lectures/relf_en.pdf
                struct('a', fuzzyMatrix([0.1, 0.2, 0.0, 1.0, 0.7; 0.3, 0.5, 0.0, 0.2, 1.0; 0.8, 0.0, 1.0, 0.4, 0.3]), ...
                       'b', fuzzyMatrix([0.9, 0.0, 0.3, 0.4; 0.2, 0.1, 0.8, 0.0; 0.8, 0.0, 0.7, 1.0; 0.4, 0.2, 0.3, 0.0; 0.0, 1.0, 0.0, 0.8]), ...
                       'expected', fuzzyMatrix([0.4, 0.7, 0.3, 0.7; 0.3, 1.0, 0.5, 0.8; 0.8, 0.3, 0.7, 1.0]));

                % M. Voskoglou, Use of Fuzzy Relation Equations for Evaluating Mathematical Modelling Skills, https://www.orientaljphysicalsciences.org/pdf/vol3no2/OJPS_Vol3_No2_102-107.pdf
                struct('a', fuzzyMatrix([0.33, 0.25, 0.12, 0.17, 0.13]), ...
                       'b', fuzzyMatrix([0.7, 0.5, 0.3, 0.0; 0.4, 0.6, 0.3, 0.1; 0.2, 0.7, 0.6, 0.2; 0.1, 0.5, 0.7, 0.5; 0.0, 0.1, 0.5, 0.8]), ...
                       'expected', fuzzyMatrix([0.33, 0.33, 0.3, 0.17]));

                % G. Klir, B. Yuan, Fuzzy Sets And Fuzzy Logic Theory and Applications, 1995, https://digilib.uin-suka.ac.id/id/eprint/7049/1/FUZZY%20SETS%20AND%20FUZZY%20LOGIC%20Theory%20and%20Applications%20-%20GEORGE%20J.%20KLIR%20,%20BO%20YUAN.pdf
                struct('a', fuzzyMatrix([0.3, 0.5, 0.8; 0.0, 0.7, 1.0; 0.4, 0.6, 0.5]), ...
                       'b', fuzzyMatrix([0.9, 0.5, 0.7, 0.7; 0.3, 0.2, 0.0, 0.9; 1.0, 0.0, 0.5, 0.5]), ...
                       'expected', fuzzyMatrix([0.8, 0.3, 0.5, 0.5; 1.0, 0.2, 0.5, 0.7; 0.5, 0.4, 0.5, 0.6]));

                % G. Klir, B. Yuan, Fuzzy Sets And Fuzzy Logic Theory and Applications, 1995, https://digilib.uin-suka.ac.id/id/eprint/7049/1/FUZZY%20SETS%20AND%20FUZZY%20LOGIC%20Theory%20and%20Applications%20-%20GEORGE%20J.%20KLIR%20,%20BO%20YUAN.pdf
                struct('a', fuzzyMatrix([0.7, 0.5, 0.0, 0.0; 0.0, 0.0, 0.0, 1.0; 0.0, 0.4, 0.0, 0.0; 0.0, 0.0, 0.8, 0.0]), ...
                       'b', fuzzyMatrix([0.7, 0.5, 0.0, 0.0; 0.0, 0.0, 0.0, 1.0; 0.0, 0.4, 0.0, 0.0; 0.0, 0.0, 0.8, 0.0]), ...
                       'expected', fuzzyMatrix([0.7, 0.5, 0.0, 0.5; 0.0, 0.0, 0.8, 0.0; 0.0, 0.0, 0.0, 0.4; 0.0, 0.4, 0.0, 0.0]));

                % WRONG IN THE LITERATURE: J. Shah, Fuzzy Matrix Theory based Decision Making for Machine Learning, 2022, https://www.jenrs.com/publications/JENRS_0106003.pdf
                struct('a', fuzzyMatrix([0.0, 0.9, 0.7; 0.5, 0.6, 0.1; 0.8, 0.4, 0.9; 0.3, 0.7, 0.2; 0.4, 1.0, 0.3]), ...
                       'b', fuzzyMatrix([1.0, 0.2, 0.4, 0.5; 0.4, 0.3, 0.8, 0.0; 0.0, 0.2, 0.6, 0.7]), ...
                       'expected', fuzzyMatrix([0.4, 0.3, 0.8, 0.7; 0.5, 0.3, 0.6, 0.5; 0.8, 0.3, 0.6, 0.7; 0.4, 0.3, 0.7, 0.3; 0.4, 0.3, 0.8, 0.4]));

                % WRONG IN THE LITERATURE: J. Shah, Fuzzy Matrix Theory based Decision Making for Machine Learning, 2022, https://www.jenrs.com/publications/JENRS_0106003.pdf
                struct('a', fuzzyMatrix([0.7, 0.2, 0.6, 0.8, 0.0, 0.1, 0.4, 0.5; 0.2, 0.8, 0.3, 0.4, 0.1, 0.6, 0.3, 0.9; 0.5, 0.6, 0.4, 0.6, 0.9, 0.4, 0.5, 0.8; 0.6, 0.9, 0.9, 0.5, 0.3, 0.2, 0.4, 0.6; 0.3, 0.8, 0.7, 0.2, 0.8, 0.9, 0.6, 0.2; 0.6, 0.1, 0.8, 0.4, 0.2, 0.1, 0.8, 0.4; 0.1, 0.2, 0.6, 0.3, 0.5, 0.7, 0.9, 0.9; 0.7, 0.3, 0.0, 0.5, 0.6, 0.9, 0.4, 0.2; 0.9, 0.4, 0.7, 0.1, 0.5, 0.4, 0.3, 1.0; 0.6, 0.5, 0.4, 0.8, 0.6, 0.3, 0.1, 0.9]), ...
                       'b', fuzzyMatrix([0.4, 0.0, 0.4, 0.1, 0.1, 0.9, 1.0, 0.9, 0.1, 0.1; 0.3, 0.2, 0.3, 0.3, 0.3, 0.7, 1.0, 0.3, 0.2, 0.2; 1.0, 0.9, 0.6, 0.2, 0.2, 0.4, 0.3, 0.4, 0.4, 0.9; 0.3, 0.8, 0.7, 0.1, 0.2, 0.5, 0.2, 0.1, 0.5, 0.7; 0.9, 0.3, 0.5, 0.9, 0.4, 0.7, 0.7, 0.2, 0.9, 0.5; 0.5, 0.7, 0.9, 0.8, 0.1, 0.9, 0.5, 0.4, 0.3, 0.2; 0.4, 0.6, 0.3, 0.5, 0.9, 0.2, 0.1, 0.5, 0.2, 0.3; 0.3, 0.4, 0.7, 0.6, 0.5, 0.4, 0.9, 0.0, 1.0, 0.4]), ...
                       'expected', fuzzyMatrix([0.6, 0.8, 0.7, 0.5, 0.5, 0.7, 0.7, 0.7, 0.5, 0.7; 0.5, 0.6, 0.7, 0.6, 0.5, 0.7, 0.9, 0.4, 0.9, 0.4; 0.9, 0.6, 0.7, 0.9, 0.5, 0.7, 0.8, 0.5, 0.9, 0.6; 0.9, 0.9, 0.6, 0.6, 0.5, 0.7, 0.9, 0.6, 0.6, 0.9; 0.8, 0.7, 0.9, 0.8, 0.6, 0.9, 0.8, 0.5, 0.8, 0.7; 0.8, 0.8, 0.6, 0.5, 0.8, 0.6, 0.6, 0.6, 0.4, 0.8; 0.6, 0.7, 0.7, 0.7, 0.9, 0.7, 0.9, 0.5, 0.9, 0.6; 0.6, 0.7, 0.9, 0.8, 0.4, 0.9, 0.7, 0.7, 0.6, 0.5; 0.7, 0.7, 0.7, 0.6, 0.5, 0.9, 0.9, 0.9, 1.0, 0.7; 0.6, 0.8, 0.7, 0.6, 0.5, 0.6, 0.9, 0.6, 0.9, 0.7]));

                % Codecrucks, Fuzzy Composition: Max-min and Max-produc, 2021, https://codecrucks.com/fuzzy-composition-max-min-and-max-product/
                struct('a', fuzzyMatrix([0.7, 0.6; 0.8, 0.3]), ...
                       'b', fuzzyMatrix([0.8, 0.5, 0.4; 0.1, 0.6, 0.7]), ...
                       'expected', fuzzyMatrix([0.7, 0.6, 0.6; 0.8, 0.5, 0.4]));
            };

            % MIN-MAX Examples
            fixture.ExamplesMinMax = {
                % M. Ragab, E. Emam, On the min-max composition of fuzzy matrices, 1994, https://pdf.sciencedirectassets.com/271522/1-s2.0-S0165011400X00206/1-s2.0-0165011494003322/main.pdf?X-Amz-Security-Token=IQoJb3JpZ2luX2VjEP7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJHMEUCIB5%2B4QLYsPmFXtxTc2dMsLCSe1WKczNPiwvrfdaevst0AiEAiWjdZRvI3gKmLV4Yt0fsyEFrUL%2BQSPeg%2FG6DxHM5JtwqswUIFxAFGgwwNTkwMDM1NDY4NjUiDMbm8s9WngApaAX8iSqQBR9HxKjECDdDpl4NCePmvp5g95V2fnOGNclVuSUKDRiC0vraiQBblYuNHaV7xk%2Bm3Zk6nso%2FYOb5xd%2FzUIUYe8mpTg2HweN160dCQgwhd0hfK7oPvMuI2LMu%2BraKDXLH8DJDckvU8EEzuPxOniRnZaJytqVYVMkxjVWBc1JJ0TRk2asrQFdu%2BhZqHR7y85JbtsZWYONJGj7CxFveWYhBkOHhz9y58YZkPifNY1qcjH1eUCUZwmFLDn2zIzDWwZkmUlLRPDx%2Bql40%2BzOs6zyH2VQVSAbyeMt7S83Wo6oO6CSGGsjkSq5xk4jaAJeZrszd0sdnsY%2BgItqdHd6uhLz4u6DrEYu%2FPjjKT1nao9WmxqrapELpWwcmGD2zXfRR8obEV%2B1vqUB%2BHHxzBuHO4tYFbKKOgpHgNleX2w64BZaT%2FimCJCOsuKngxCnORGPljCL8T08ZUGWNRdZhXqHdSPaMUeJGYUw6FkGg0PQUhbyW%2BGFKMVmm0ReRUDpYwf7GLQf6Rbg%2BNrSss97AJ3fNGGtj0VQKDue8EmSXFkLcfu7jzd4Tsk2b7cpa%2BSIWHTVq0fTa8%2FvspdVt6t2pU%2BjZO9wj04PY0vX9QBC%2FvFW1QE0H15sWgefMibaBrgtL5n3IBCDfy5DqzWvJOim%2FiZY2RW8wNLev6yoxAsOS425rYtrQLD5JoRYPHQeZu4oYzNkg8%2BYACAK%2BZMT4j0G85wkIxyyk7htGa98uJUzVa1J9l9Zd6hFY8rCasbTRu3i4rW3c9er2JJyfawPpJSQeV9Lq5ZA8aZzMMpIBusdvnUYJrP1v0BJFnLQTRjU6IyT8y8LWyl0dCIhjjzLzewQKvVDEQvMMLlLZYzsWVIDsEygOT9jzRryhMLWot7YGOrEBQPryXNpzu1zeR5222DfVI1WNOJ94XC4Yqt2yz6gzeIN9E%2BjWTocC%2FaHFckN3NSbW3mdKegZswIe7QzfEfv0LkMLHWgrfca399hb7CGXmx4EaxgZntQn8BR97m0qTWZ8NdyG3VXJCFhdwL%2FfyNj9SETRV67%2FSjMFX1SvXLAtoDw08EZtUDLVJhT4pyq3x9uTPUfNXzA0uCAs9Gt1j%2BB68LpJFghnLDLdjJmwx%2BzbC58Ms&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20240827T141617Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIAQ3PHCVTYZUQT3KDQ%2F20240827%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=ae4d67b2b7ec4c4ade0f946201bfc8501eccf1ba2e8a4c47f0c48b89ff17c3c1&hash=af44622c3084167ea07c747e7eee0364c8d296f40bd9988776fc7fd3ef5175ec&host=68042c943591013ac2b2430a89b270f6af2c76d8dfd086a07176afe7c76c2c61&pii=0165011494003322&tid=spdf-bfc1f619-c752-46c2-b9bf-2c26bc94993d&sid=045fc27b5ff2b446377bcbc1a78b1cd1fda8gxrqa&type=client&tsoh=d3d3LnNjaWVuY2VkaXJlY3QuY29t&ua=1803580656010507055c&rr=8b9cadb33b88d0d3&cc=bg
                struct('a', fuzzyMatrix([0.5, 0.7, 0.8, 0.9, 0.6; 0.4, 0.3, 0.7, 0.2, 0.8; 0.6, 0.5, 0.4, 1.0, 0.3; 0.9, 0.2, 0.6, 0.4, 0.7]), ...
                       'b', fuzzyMatrix([0.5, 0.4, 0.6, 0.9; 0.7, 0.3, 0.5, 0.2; 0.8, 0.7, 0.4, 0.6; 0.9, 0.2, 1.0, 0.4; 0.6, 0.8, 0.3, 0.7]), ...
                       'expected', fuzzyMatrix([0.5, 0.5, 0.6, 0.7; 0.5, 0.2, 0.5, 0.3; 0.6, 0.5, 0.3, 0.5; 0.7, 0.3, 0.5, 0.2]));

                % M. Ragab, E. Emam, On the min-max composition of fuzzy matrices, 1994, https://pdf.sciencedirectassets.com/271522/1-s2.0-S0165011400X00206/1-s2.0-0165011494003322/main.pdf?X-Amz-Security-Token=IQoJb3JpZ2luX2VjEP7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJHMEUCIB5%2B4QLYsPmFXtxTc2dMsLCSe1WKczNPiwvrfdaevst0AiEAiWjdZRvI3gKmLV4Yt0fsyEFrUL%2BQSPeg%2FG6DxHM5JtwqswUIFxAFGgwwNTkwMDM1NDY4NjUiDMbm8s9WngApaAX8iSqQBR9HxKjECDdDpl4NCePmvp5g95V2fnOGNclVuSUKDRiC0vraiQBblYuNHaV7xk%2Bm3Zk6nso%2FYOb5xd%2FzUIUYe8mpTg2HweN160dCQgwhd0hfK7oPvMuI2LMu%2BraKDXLH8DJDckvU8EEzuPxOniRnZaJytqVYVMkxjVWBc1JJ0TRk2asrQFdu%2BhZqHR7y85JbtsZWYONJGj7CxFveWYhBkOHhz9y58YZkPifNY1qcjH1eUCUZwmFLDn2zIzDWwZkmUlLRPDx%2Bql40%2BzOs6zyH2VQVSAbyeMt7S83Wo6oO6CSGGsjkSq5xk4jaAJeZrszd0sdnsY%2BgItqdHd6uhLz4u6DrEYu%2FPjjKT1nao9WmxqrapELpWwcmGD2zXfRR8obEV%2B1vqUB%2BHHxzBuHO4tYFbKKOgpHgNleX2w64BZaT%2FimCJCOsuKngxCnORGPljCL8T08ZUGWNRdZhXqHdSPaMUeJGYUw6FkGg0PQUhbyW%2BGFKMVmm0ReRUDpYwf7GLQf6Rbg%2BNrSss97AJ3fNGGtj0VQKDue8EmSXFkLcfu7jzd4Tsk2b7cpa%2BSIWHTVq0fTa8%2FvspdVt6t2pU%2BjZO9wj04PY0vX9QBC%2FvFW1QE0H15sWgefMibaBrgtL5n3IBCDfy5DqzWvJOim%2FiZY2RW8wNLev6yoxAsOS425rYtrQLD5JoRYPHQeZu4oYzNkg8%2BYACAK%2BZMT4j0G85wkIxyyk7htGa98uJUzVa1J9l9Zd6hFY8rCasbTRu3i4rW3c9er2JJyfawPpJSQeV9Lq5ZA8aZzMMpIBusdvnUYJrP1v0BJFnLQTRjU6IyT8y8LWyl0dCIhjjzLzewQKvVDEQvMMLlLZYzsWVIDsEygOT9jzRryhMLWot7YGOrEBQPryXNpzu1zeR5222DfVI1WNOJ94XC4Yqt2yz6gzeIN9E%2BjWTocC%2FaHFckN3NSbW3mdKegZswIe7QzfEfv0LkMLHWgrfca399hb7CGXmx4EaxgZntQn8BR97m0qTWZ8NdyG3VXJCFhdwL%2FfyNj9SETRV67%2FSjMFX1SvXLAtoDw08EZtUDLVJhT4pyq3x9uTPUfNXzA0uCAs9Gt1j%2BB68LpJFghnLDLdjJmwx%2BzbC58Ms&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20240827T141617Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIAQ3PHCVTYZUQT3KDQ%2F20240827%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=ae4d67b2b7ec4c4ade0f946201bfc8501eccf1ba2e8a4c47f0c48b89ff17c3c1&hash=af44622c3084167ea07c747e7eee0364c8d296f40bd9988776fc7fd3ef5175ec&host=68042c943591013ac2b2430a89b270f6af2c76d8dfd086a07176afe7c76c2c61&pii=0165011494003322&tid=spdf-bfc1f619-c752-46c2-b9bf-2c26bc94993d&sid=045fc27b5ff2b446377bcbc1a78b1cd1fda8gxrqa&type=client&tsoh=d3d3LnNjaWVuY2VkaXJlY3QuY29t&ua=1803580656010507055c&rr=8b9cadb33b88d0d3&cc=bg
                struct('a', fuzzyMatrix([0.7, 0.5, 0.3, 0.4; 0.2, 0.9, 0.7, 0.8; 1.0, 0.8, 0.3, 0.6]), ...
                       'b', fuzzyMatrix([0.5, 0.7; 0.6, 0.4; 0.2, 0.8; 0.7, 0.5]), ...
                       'expected', fuzzyMatrix([0.3, 0.5; 0.5, 0.7; 0.3, 0.6]));                       
            };
        
            % MAX-PRODUCT Examples
            fixture.ExamplesMaxProduct = {
                % WRONG IN THE LITERATURE: U. Ahmed, M. Saqib, Optimal Solution of Fuzzy Relation Equations, 2010, https://www.diva-portal.org/smash/get/diva2:830458/FULLTEXT01.pdf
                struct('a', fuzzyMatrix([0.3, 0.5, 0.0; 0.2, 0.6, 0.7; 0.4, 1.0, 0.9]), ...
                       'b', fuzzyMatrix([0.6, 0.4; 1.0, 0.8; 0.5, 0.0]), ...
                       'expected', fuzzyMatrix([0.5, 0.4; 0.6, 0.48; 1.0, 0.8]));

                % D. Todinca, Fuzzy relations, Chapter 4, https://staff.cs.upt.ro/~todinca/FLA/Lectures/relf_en.pdf
                struct('a', fuzzyMatrix([0.1, 0.2, 0.0, 1.0, 0.7; 0.3, 0.5, 0.0, 0.2, 1.0; 0.8, 0.0, 1.0, 0.4, 0.3]), ...
                       'b', fuzzyMatrix([0.9, 0.0, 0.3, 0.4; 0.2, 0.1, 0.8, 0.0; 0.8, 0.0, 0.7, 1.0; 0.4, 0.2, 0.3, 0.0; 0.0, 1.0, 0.0, 0.8]), ...
                       'expected', fuzzyMatrix([0.4, 0.7, 0.3, 0.56; 0.27, 1.0, 0.4, 0.8; 0.8, 0.3, 0.7, 1.0]));                       
            };

            % MIN-ALPHA Examples
            fixture.ExamplesMinAlpha = {
            };

            % GODEL Examples
            fixture.ExamplesGodel = {
            };

            % MAX-EPSILON Examples
            fixture.ExamplesMaxEpsilon = {
            };

            % MIN-DIAMOND Examples
            fixture.ExamplesMinDiamond = {
            };

            % GOGUEN Examples
            fixture.ExamplesGoguen = {
            };

            % LUKASIEWICZ Examples
            fixture.ExamplesLukasiewicz = {
            };

            % MAX-LUKASIEWICZ Examples
            fixture.ExamplesMaxLukasiewicz = {
            };

            % MIN-PROBABILISTIC Examples
            fixture.ExamplesMinProbabilistic = {
            };

            % MIN-BOUNDED Examples
            fixture.ExamplesMinBounded = {
            };

            % MAX-DELTA Examples
            fixture.ExamplesMaxDelta = {
            };

            % MAX-GAMA Examples
            fixture.ExamplesMaxGama = {
            };


            
            % Randomly generated examples
            fixture.RandomExamples = {
                % 2x2, and 2x2
                struct('a', fuzzyMatrix([0.8147, 0.1270; 0.9058, 0.9134]), ...
                       'b', fuzzyMatrix([0.6324, 0.2785; 0.0975, 0.5469]), ...
                       'expectedMaxMin', fuzzyMatrix([0.6324, 0.2785; 0.6324, 0.5469]), ...
                       'expectedMinMax', fuzzyMatrix([0.1270, 0.5469; 0.9058, 0.9058]), ...
                       'expectedMaxProduct', fuzzyMatrix([0.51521628, 0.22689395; 0.57282792, 0.49953846]), ...
                       'expectedMinAlpha', fuzzyMatrix([0.0975, 0.2785; 0.0975, 0.2785]), ...
                       'expectedGodel', fuzzyMatrix([0.0975, 0.2785; 0.0975, 0.2785]), ...
                       'expectedMaxEpsilon', fuzzyMatrix([0, 0.5469; 0, 0]), ...
                       'expectedMinDiamond', fuzzyMatrix([0.767716535433071, 0.341843623419664; 0.106744033282242, 0.307463016118348]), ...
                       'expectedGoguen', fuzzyMatrix([0.767717, 0.341844; 0.106744, 0.307463]), ...
                       'expectedLukasiewicz', fuzzyMatrix([0.8177, 0.4638; 0.1841, 0.3727]), ...
                       'expectedMaxLukasiewicz', fuzzyMatrix([0.4471, 0.0932; 0.5382, 0.4603]), ...
                       'expectedMinProbabilistic', fuzzyMatrix([0.212118, 0.604444; 0.921843, 0.932035]), ...
                       'expectedMinBounded', fuzzyMatrix([0.2245, 0.6739; 1, 1]), ...
                       'expectedMaxDelta', fuzzyMatrix([0, 0.4199; 0, 0]), ...
                       'expectedMaxGama', fuzzyMatrix([0, 0.480985; 0, 0]) ...
                );

                % 2x5, and 5x2
                struct('a', fuzzyMatrix([0.6220, 0.2077, 0.4709, 0.8443, 0.2259; 0.5870, 0.3012, 0.2305, 0.1948, 0.1707]), ...
                       'b', fuzzyMatrix([0.2277, 0.1848; 0.4357, 0.9049; 0.3111, 0.9797; 0.9234, 0.4389; 0.4302, 0.1111]), ...
                       'expectedMaxMin', fuzzyMatrix([0.8443, 0.4709; 0.3012, 0.3012]), ...
                       'expectedMinMax', fuzzyMatrix([0.4302, 0.2259; 0.3111, 0.1707]), ...
                       'expectedMaxProduct', fuzzyMatrix([0.77962662, 0.46134073; 0.17987832, 0.27255588]), ...
                       'expectedMinAlpha', fuzzyMatrix([0.2277, 0.1111; 0.2277, 0.1111]), ...
                       'expectedGodel', fuzzyMatrix([0.2277, 0.1111; 0.2277, 0.1111]), ...
                       'expectedMaxEpsilon', fuzzyMatrix([0.9234, 0.9797; 0.9234, 0.9797]), ...
                       'expectedMinDiamond', fuzzyMatrix([0.366077, 0.297106; 0.387905, 0.314821]), ...
                       'expectedGoguen', fuzzyMatrix([0.366077, 0.297106; 0.387905, 0.314821]), ...
                       'expectedLukasiewicz', fuzzyMatrix([0.6057, 0.5628; 0.6407, 0.5978]), ...
                       'expectedMaxLukasiewicz', fuzzyMatrix([0.7677, 0.4506; 0.1182, 0.2102]), ...
                       'expectedMinProbabilistic', fuzzyMatrix([0.552905, 0.311903; 0.469891, 0.262835]), ...
                       'expectedMinBounded', fuzzyMatrix([0.6434, 0.3370; 0.5416, 0.2818]), ...
                       'expectedMaxDelta', fuzzyMatrix([0.2280, 0.6972; 0.7286, 0.7492]), ...
                       'expectedMaxGama', fuzzyMatrix([0.508028, 0.961633; 0.904868, 0.973619]) ...
                );

                % 10x10, and 10x10
                struct('a', fuzzyMatrix([0.9575, 0.7922, 0.6555, 0.9502, 0.7094, 0.5853, 0.1493, 0.6160, 0.3804, 0.0119; 0.9649, 0.9595, 0.1712, 0.0344, 0.7547, 0.2238, 0.2575, 0.4733, 0.5678, 0.3371; 0.1576, 0.6557, 0.7060, 0.4387, 0.2760, 0.7513, 0.8407, 0.3517, 0.0759, 0.1622; 0.9706, 0.0357, 0.0318, 0.3816, 0.6797, 0.2551, 0.2543, 0.8308, 0.0540, 0.7943; 0.9572, 0.8491, 0.2769, 0.7655, 0.6551, 0.5060, 0.8143, 0.5853, 0.5308, 0.3112; 0.4854, 0.9340, 0.0462, 0.7952, 0.1626, 0.6991, 0.2435, 0.5497, 0.7792, 0.5285; 0.8003, 0.6787, 0.0971, 0.1869, 0.1190, 0.8909, 0.9293, 0.9172, 0.9340, 0.1656; 0.1419, 0.7577, 0.8235, 0.4898, 0.4984, 0.9593, 0.3500, 0.2858, 0.1299, 0.6020; 0.4218, 0.7431, 0.6948, 0.4456, 0.9597, 0.5472, 0.1966, 0.7572, 0.5688, 0.2630; 0.9157, 0.3922, 0.3171, 0.6463, 0.3404, 0.1386, 0.2511, 0.7537, 0.4694, 0.6541]), ...
                       'b', fuzzyMatrix([0.6892, 0.0782, 0.2599, 0.5499, 0.1839, 0.3692, 0.5752, 0.6477, 0.7802, 0.8176; 0.7482, 0.4427, 0.8001, 0.1450, 0.2400, 0.1112, 0.0598, 0.4509, 0.0811, 0.7948; 0.4505, 0.1067, 0.4314, 0.8530, 0.4173, 0.7803, 0.2348, 0.5470, 0.9294, 0.6443; 0.0838, 0.9619, 0.9106, 0.6221, 0.0497, 0.3897, 0.3532, 0.2963, 0.7757, 0.3786; 0.2290, 0.0046, 0.1818, 0.3510, 0.9027, 0.2417, 0.8212, 0.7447, 0.4868, 0.8116; 0.9133, 0.7749, 0.2638, 0.5132, 0.9448, 0.4039, 0.0154, 0.1890, 0.4359, 0.5328; 0.1524, 0.8173, 0.1455, 0.4018, 0.4909, 0.0965, 0.0430, 0.6868, 0.4468, 0.3507; 0.8258, 0.8687, 0.1361, 0.0760, 0.4893, 0.1320, 0.1690, 0.1835, 0.3063, 0.9390; 0.5383, 0.0844, 0.8693, 0.2399, 0.3377, 0.9421, 0.6491, 0.3685, 0.5085, 0.8759; 0.9961, 0.3998, 0.5797, 0.1233, 0.9001, 0.9561, 0.7317, 0.6256, 0.5108, 0.5502]), ...
                       'expectedMaxMin', fuzzyMatrix([0.7482, 0.9502, 0.9106, 0.6555, 0.7094, 0.6555, 0.7094, 0.7094, 0.7802, 0.8176; 0.7482, 0.4733, 0.8001, 0.5499, 0.7547, 0.5678, 0.7547, 0.7447, 0.7802, 0.8176; 0.7513, 0.8173, 0.6557, 0.7060, 0.7513, 0.7060, 0.3532, 0.6868, 0.7060, 0.6557; 0.8258, 0.8308, 0.5797, 0.5499, 0.7943, 0.7943, 0.7317, 0.6797, 0.7802, 0.8308; 0.7482, 0.8143, 0.8001, 0.6221, 0.6551, 0.5308, 0.6551, 0.6868, 0.7802, 0.8176; 0.7482, 0.7952, 0.8001, 0.6221, 0.6991, 0.7792, 0.6491, 0.5285, 0.7757, 0.7948; 0.8909, 0.8687, 0.8693, 0.5499, 0.8909, 0.9340, 0.6491, 0.6868, 0.7802, 0.9172; 0.9133, 0.7749, 0.7577, 0.8235, 0.9448, 0.7803, 0.6020, 0.6020, 0.8235, 0.7577; 0.7572, 0.7572, 0.7431, 0.6948, 0.9027, 0.6948, 0.8212, 0.7447, 0.6948, 0.8116; 0.7537, 0.7537, 0.6463, 0.6221, 0.6541, 0.6541, 0.6541, 0.6477, 0.7802, 0.8176]), ...
                       'expectedMinMax', fuzzyMatrix([0.1524, 0.3804, 0.1493, 0.1233, 0.3804, 0.1493, 0.1493, 0.3804, 0.4468, 0.3507; 0.0838, 0.1712, 0.2575, 0.3371, 0.0497, 0.2575, 0.2238, 0.2238, 0.4359, 0.3507; 0.2760, 0.0844, 0.2599, 0.1622, 0.1839, 0.2760, 0.3517, 0.3517, 0.3517, 0.4387; 0.2543, 0.0844, 0.2543, 0.1450, 0.2400, 0.1112, 0.0598, 0.2551, 0.0811, 0.3507; 0.4505, 0.2769, 0.4314, 0.3112, 0.4173, 0.5060, 0.2769, 0.5060, 0.5060, 0.5328; 0.2290, 0.1067, 0.1818, 0.3510, 0.4173, 0.2417, 0.2348, 0.5470, 0.4468, 0.3507; 0.1869, 0.1067, 0.1818, 0.1656, 0.1869, 0.2417, 0.2348, 0.2963, 0.4868, 0.3786; 0.3500, 0.1299, 0.2599, 0.2399, 0.1839, 0.2858, 0.2858, 0.2858, 0.3063, 0.3507; 0.1966, 0.3998, 0.1966, 0.2630, 0.4218, 0.1966, 0.1966, 0.4456, 0.4468, 0.3507; 0.2511, 0.3171, 0.2511, 0.3510, 0.3922, 0.2511, 0.1386, 0.1890, 0.3922, 0.3507]), ...
                       'expectedMaxProduct', fuzzyMatrix([0.659909, 0.91399738, 0.86525212, 0.59111942, 0.64037538, 0.51148665, 0.58255928, 0.62017275, 0.7470415, 0.782852; 0.7178979, 0.42477065, 0.76769595, 0.53059851, 0.68126769, 0.53492438, 0.61975964, 0.62496573, 0.75281498, 0.78890224; 0.68616229, 0.68710411, 0.52462557, 0.602218, 0.70982824, 0.5508918, 0.2266512, 0.57739276, 0.6561564, 0.52115036; 0.79120223, 0.72171596, 0.46045571, 0.53373294, 0.71494943, 0.75943023, 0.58118931, 0.62865762, 0.75726212, 0.79356256; 0.65970224, 0.73633445, 0.6970643, 0.52636428, 0.59135877, 0.50006668, 0.55058144, 0.61997844, 0.74680744, 0.78260672; 0.6988188, 0.76490288, 0.7472934, 0.49469392, 0.66050968, 0.73408432, 0.50577872, 0.4211406, 0.61683664, 0.7423432; 0.81365897, 0.79677164, 0.8119262, 0.45720988, 0.84172232, 0.8799214, 0.6062594, 0.63824324, 0.62439406, 0.8612508; 0.87612869, 0.74336157, 0.60623577, 0.7024455, 0.90634664, 0.64257705, 0.4404834, 0.4504545, 0.7653609, 0.60221996; 0.62529576, 0.65777964, 0.59455431, 0.5926644, 0.86632119, 0.54215244, 0.78810564, 0.71468859, 0.64574712, 0.77889252; 0.65154901, 0.65473919, 0.58852078, 0.50354343, 0.58875541, 0.62538501, 0.52671064, 0.59309889, 0.71442914, 0.74867632]), ...
                       'expectedMinAlpha', fuzzyMatrix([0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.1524, 0.0046, 0.1361, 0.076, 0.1839, 0.0965, 0.0154, 0.1835, 0.0811, 0.7948; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.3063, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786]), ...
                       'expectedGodel', fuzzyMatrix([0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.1524, 0.0046, 0.1361, 0.076, 0.1839, 0.0965, 0.0154, 0.1835, 0.0811, 0.7948; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.3063, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3507; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786; 0.0838, 0.0046, 0.1361, 0.076, 0.0497, 0.0965, 0.0154, 0.1835, 0.0811, 0.3786]), ...
                       'expectedMaxEpsilon', fuzzyMatrix([0.9961, 0.9619, 0.8693, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.6868, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9027, 0.9561, 0.8212, 0.7447, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.7317, 0.6868, 0.9294, 0.939; 0.9961, 0.9619, 0.9106, 0.853, 0.9448, 0.9561, 0.8212, 0.7447, 0.9294, 0.939]), ...
                       'expectedMinDiamond', fuzzyMatrix([0.088192, 0.00648435, 0.220942, 0.123377, 0.0523048, 0.140369, 0.0263113, 0.29789, 0.102373, 0.398442; 0.303432, 0.00609514, 0.24089, 0.15112, 0.19059, 0.115894, 0.0623241, 0.387703, 0.0845232, 0.828348; 0.181278, 0.0166667, 0.17307, 0.216093, 0.113289, 0.114785, 0.0204978, 0.251564, 0.123685, 0.417152; 0.219602, 0.00676769, 0.163818, 0.0914781, 0.130241, 0.158883, 0.0603685, 0.220871, 0.368681, 0.692685; 0.109471, 0.00702183, 0.178681, 0.129848, 0.0649249, 0.118507, 0.0304348, 0.313514, 0.0955129, 0.430677; 0.105382, 0.0282903, 0.24759, 0.138257, 0.0625, 0.119058, 0.0220283, 0.270348, 0.0868308, 0.476107; 0.163994, 0.0386555, 0.148386, 0.0828609, 0.229789, 0.103842, 0.0172859, 0.200065, 0.119493, 0.377381; 0.17109, 0.00922953, 0.274992, 0.191369, 0.10147, 0.14676, 0.0160534, 0.197019, 0.107034, 0.555405; 0.188061, 0.00479316, 0.179741, 0.10037, 0.111535, 0.149643, 0.0281433, 0.24234, 0.109137, 0.845681; 0.129661, 0.0135135, 0.180576, 0.100836, 0.0768993, 0.175136, 0.111111, 0.243466, 0.206782, 0.585796]), ...
                       'expectedGoguen', fuzzyMatrix([0.088192, 0.00648435, 0.220942, 0.123377, 0.0523048, 0.140369, 0.0263113, 0.29789, 0.102373, 0.398442; 0.303432, 0.00609514, 0.24089, 0.15112, 0.19059, 0.115894, 0.0623241, 0.387703, 0.0845232, 0.828348; 0.181278, 0.0166667, 0.17307, 0.216093, 0.113289, 0.114785, 0.0204978, 0.251564, 0.123685, 0.417152; 0.219602, 0.00676769, 0.163818, 0.0914781, 0.130241, 0.158883, 0.0603685, 0.220871, 0.368681, 0.692685; 0.109471, 0.00702183, 0.178681, 0.129848, 0.0649249, 0.118507, 0.0304348, 0.313514, 0.0955129, 0.430677; 0.105382, 0.0282903, 0.24759, 0.138257, 0.0625, 0.119058, 0.0220283, 0.270348, 0.0868308, 0.476107; 0.163994, 0.0386555, 0.148386, 0.0828609, 0.229789, 0.103842, 0.0172859, 0.200065, 0.119493, 0.377381; 0.17109, 0.00922953, 0.274992, 0.191369, 0.10147, 0.14676, 0.0160534, 0.197019, 0.107034, 0.555405; 0.188061, 0.00479316, 0.179741, 0.10037, 0.111535, 0.149643, 0.0281433, 0.24234, 0.109137, 0.845681; 0.129661, 0.0135135, 0.180576, 0.100836, 0.0768993, 0.175136, 0.111111, 0.243466, 0.206782, 0.585796]), ...
                       'expectedLukasiewicz', fuzzyMatrix([0.1336, 0.1207, 0.3024, 0.3528, 0.0995, 0.319, 0.2676, 0.3461, 0.2889, 0.4284; 0.4743, 0.1133, 0.295, 0.1855, 0.219, 0.1517, 0.1003, 0.4914, 0.1216, 0.8353; 0.3117, 0.4007, 0.3048, 0.4893, 0.5843, 0.2558, 0.2023, 0.4377, 0.4254, 0.51; 0.5493, 0.1076, 0.2893, 0.2452, 0.2133, 0.3012, 0.3382, 0.3527, 0.4755, 0.7559; 0.3183, 0.121, 0.3027, 0.2959, 0.2267, 0.2621, 0.2107, 0.5308, 0.232, 0.5364; 0.2886, 0.3052, 0.5647, 0.211, 0.2545, 0.1772, 0.1258, 0.4899, 0.1471, 0.5834; 0.2231, 0.1504, 0.2162, 0.1588, 0.3836, 0.1672, 0.1137, 0.2663, 0.3891, 0.4214; 0.594, 0.2832, 0.3045, 0.3873, 0.4823, 0.3535, 0.0561, 0.2297, 0.3234, 0.5735; 0.2693, 0.0449, 0.2221, 0.3188, 0.4969, 0.282, 0.3167, 0.4263, 0.338, 0.8519; 0.4375, 0.1625, 0.3442, 0.3223, 0.2682, 0.3783, 0.4153, 0.4298, 0.5526, 0.7323]), ...
                       'expectedMaxLukasiewicz', fuzzyMatrix([0.6467, 0.9121, 0.8608, 0.5723, 0.6121, 0.4358, 0.5327, 0.6052, 0.7377, 0.7751; 0.7077, 0.4022, 0.7596, 0.5148, 0.6574, 0.5099, 0.5759, 0.6126, 0.7451, 0.7825; 0.6646, 0.658, 0.4558, 0.559, 0.6961, 0.4863, 0.0972, 0.5275, 0.6354, 0.4505; 0.7904, 0.6995, 0.374, 0.5205, 0.6944, 0.7504, 0.5458, 0.6183, 0.7508, 0.7882; 0.6464, 0.7274, 0.6761, 0.5071, 0.5578, 0.4729, 0.5324, 0.6049, 0.7374, 0.7748; 0.6822, 0.7571, 0.7341, 0.4173, 0.6439, 0.7213, 0.4283, 0.3849, 0.5709, 0.7288; 0.8042, 0.7859, 0.8033, 0.4041, 0.8357, 0.8761, 0.5831, 0.6161, 0.5805, 0.8562; 0.8726, 0.7342, 0.5578, 0.6765, 0.9041, 0.6038, 0.3337, 0.3705, 0.7529, 0.5525; 0.583, 0.6259, 0.5432, 0.5478, 0.8624, 0.5109, 0.7809, 0.7044, 0.6242, 0.7713; 0.6502, 0.6224, 0.5569, 0.4656, 0.5542, 0.6102, 0.4909, 0.5634, 0.6959, 0.7333]), ...
                       'expectedMinProbabilistic', fuzzyMatrix([0.278947, 0.406942, 0.273077, 0.133733, 0.566909, 0.231393, 0.18588, 0.608723, 0.516621, 0.44764; 0.115317, 0.259633, 0.365534, 0.418836, 0.0823903, 0.329151, 0.235753, 0.320507, 0.562146, 0.399976; 0.441796, 0.153894, 0.37654, 0.265501, 0.312517, 0.437276, 0.461263, 0.416431, 0.545805, 0.623158; 0.367945, 0.133842, 0.362799, 0.175523, 0.267132, 0.14293, 0.0933651, 0.395886, 0.113905, 0.515817; 0.602657, 0.354055, 0.588845, 0.396129, 0.57865, 0.64004, 0.446684, 0.599366, 0.663039, 0.690178; 0.354365, 0.14797, 0.314839, 0.456527, 0.444221, 0.316502, 0.270152, 0.567929, 0.570246, 0.508805; 0.255038, 0.123053, 0.279166, 0.268482, 0.227311, 0.331938, 0.309101, 0.427822, 0.547871, 0.49474; 0.44906, 0.203336, 0.36492, 0.338637, 0.299705, 0.380074, 0.37795, 0.416856, 0.504559, 0.577955; 0.319038, 0.467015, 0.313495, 0.353872, 0.473154, 0.274128, 0.231146, 0.609869, 0.555559, 0.478352; 0.365232, 0.343434, 0.360065, 0.480331, 0.538072, 0.323369, 0.151866, 0.301405, 0.441493, 0.513739]), ...
                       'expectedMinBounded', fuzzyMatrix([0.3017, 0.4117, 0.2948, 0.1352, 0.6402, 0.2458, 0.1923, 0.6375, 0.5227, 0.5; 0.1182, 0.2779, 0.403, 0.4604, 0.0841, 0.354, 0.2392, 0.3307, 0.6597, 0.413; 0.505, 0.1603, 0.4175, 0.2855, 0.3415, 0.4837, 0.5207, 0.4444, 0.5844, 0.7124; 0.4067, 0.1384, 0.3998, 0.1807, 0.2757, 0.1469, 0.0955, 0.4225, 0.1168, 0.605; 0.7274, 0.3836, 0.7083, 0.4345, 0.6942, 0.7173, 0.5117, 0.695, 0.822, 0.8614; 0.3916, 0.1529, 0.3444, 0.5136, 0.4635, 0.34, 0.281, 0.5932, 0.6494, 0.5942; 0.2707, 0.1236, 0.3008, 0.2889, 0.2366, 0.3607, 0.3319, 0.4832, 0.6058, 0.5655; 0.5024, 0.2143, 0.4018, 0.3618, 0.3258, 0.4178, 0.393, 0.4693, 0.5921, 0.7007; 0.349, 0.5, 0.3421, 0.3863, 0.4953, 0.2931, 0.2396, 0.7362, 0.6434, 0.5473; 0.4035, 0.345, 0.3966, 0.5372, 0.6322, 0.3476, 0.154, 0.3276, 0.4733, 0.6018]), ...
                       'expectedMaxDelta', fuzzyMatrix([0.9842, 0.668, 0.5678, 0.2525, 0.8882, 0.9442, 0.7198, 0.6137, 0.4989, 0.5383; 0.6895, 0.9275, 0.8762, 0.6818, 0.721, 0.619, 0.3946, 0.4293, 0.7582, 0.4731; 0.8339, 0.5232, 0.7934, 0.3923, 0.7379, 0.8662, 0.5732, 0.4901, 0.6226, 0.8; 0.7125, 0.5803, 0.8153, 0.8212, 0.6897, 0.8881, 0.5951, 0.5152, 0.8976, 0.8219; 0.6849, 0.2834, 0.3385, 0.5761, 0.5889, 0.6449, 0.4205, 0.3144, 0.6525, 0.3674; 0.4676, 0.5738, 0.3852, 0.8068, 0.7401, 0.7341, 0.6586, 0.5821, 0.8832, 0.649; 0.8305, 0.775, 0.7237, 0.7559, 0.7837, 0.7905, 0.7022, 0.6257, 0.8323, 0.6926; 0.5473, 0.5829, 0.7394, 0.408, 0.4043, 0.8122, 0.5192, 0.5058, 0.6383, 0.746; 0.7331, 0.6207, 0.465, 0.2052, 0.6371, 0.6931, 0.4687, 0.4902, 0.3584, 0.3958; 0.7747, 0.6363, 0.4079, 0.5359, 0.8062, 0.4727, 0.4808, 0.4357, 0.6123, 0.4712]), ...
                       'expectedMaxGama', fuzzyMatrix([0.996053, 0.785236, 0.789057, 0.573295, 0.898897, 0.955571, 0.728469, 0.631833, 0.795065, 0.841146; 0.994117, 0.960543, 0.907415, 0.822635, 0.928884, 0.933776, 0.595263, 0.578182, 0.914817, 0.884185; 0.995345, 0.932122, 0.858565, 0.5, 0.880759, 0.947601, 0.753039, 0.647376, 0.759864, 0.905908; 0.98104, 0.938389, 0.861839, 0.848172, 0.925896, 0.938795, 0.62907, 0.579992, 0.927081, 0.868816; 0.994338, 0.837527, 0.721441, 0.796709, 0.888259, 0.936266, 0.610482, 0.456446, 0.902365, 0.852906; 0.991729, 0.813965, 0.563477, 0.84588, 0.883807, 0.906893, 0.786482, 0.695128, 0.92598, 0.864535; 0.995326, 0.953142, 0.89005, 0.837191, 0.889557, 0.947387, 0.797049, 0.710216, 0.921808, 0.786152; 0.990201, 0.925323, 0.849787, 0.475469, 0.806021, 0.933456, 0.643541, 0.589442, 0.743853, 0.91459; 0.994708, 0.931277, 0.838745, 0.518349, 0.878092, 0.940434, 0.635957, 0.610157, 0.768676, 0.748764; 0.988725, 0.892282, 0.753675, 0.784742, 0.935918, 0.890878, 0.728927, 0.612947, 0.896617, 0.766114]) ...
                )
            };
        end
    end
end
